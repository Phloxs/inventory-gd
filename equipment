extends Panel

onready var slots = get_children()

var items = {}



var inc_dmg = false
var weapon_slot_used = false
var armor_slot_used = false
var wep_eq = null

func _ready():
	var global = get_node("/root/Global")
	for slot in slots:
		items[slot.name] = null


func insert_item(item):
	var global = get_node("/root/Global")
	var item_pos = item.rect_global_position + item.rect_size / 2
	var slot = get_slot_under_pos(item_pos)
	if slot == null:
		items[slot.MAIN_HAND]
		return false
	global.pos = item_pos
	
	var item_slot = ItemDB.get_item(item.get_meta("id"))["slot"]
	var item_damage = ItemDB.get_item(item.get_meta("id"))["damage"]
	
	var inventory = get_node("/root/Inventory")
	if item_slot != slot.name:
		return false
	
	if items[item_slot] != null:
		return false
	
	items[item_slot] = item
	global.increased_damage += int(item_damage)
	global.player_damage += global.increased_damage
	item.rect_global_position = slot.rect_global_position + slot.rect_size / 2 - item.rect_size / 2
	return true


func grab_item(pos):
	var global = get_node("/root/Global")
	var item = get_item_under_pos(pos)
	if item == null:
		return null
	global.player_damage -= global.increased_damage
	global.increased_damage = 0
	var item_slot = ItemDB.get_item(item.get_meta("id"))["slot"]
	items[item_slot] = null
	return item
 
func get_slot_under_pos(pos):
	return get_thing_under_pos(slots, pos)
 
func get_item_under_pos(pos):
	return get_thing_under_pos(items.values(), pos)
 
func get_thing_under_pos(arr, pos):
	for thing in arr:
		if thing != null and thing.get_global_rect().has_point(pos):
			return thing
	return null
